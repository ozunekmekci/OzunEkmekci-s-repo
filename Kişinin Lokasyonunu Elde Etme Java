package com.example.mapsactivity;

import androidx.annotation.NonNull;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import androidx.fragment.app.FragmentActivity;

import android.Manifest;
import android.content.Context;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {

    private GoogleMap mMap;
    LocationListener locationListener;
    LocationManager locationManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);
        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
    }




    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;



        //Kişinin yerini bulma kodu.
        locationManager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);


        // LocationListener locationListener = new LocationListener yazınca yukarıdaki koda yardımcı kendi Override larını ekler.

        locationListener = new LocationListener() {
            @Override
            public void onLocationChanged(Location location) {
               System.out.println("location : " + location.toString());

                // location.toString();


            }

            @Override
            public void onStatusChanged(String provider, int status, Bundle extras) {

            }

            @Override
            public void onProviderEnabled(String provider) {

            }

            @Override
            public void onProviderDisabled(String provider) {

            }
        }; //noktalı virgül koy.

                    //İzin Alma Kodu /Lokasyon
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this,new String[] {Manifest.permission.ACCESS_FINE_LOCATION},1);
        }else { //İzin Varsa
            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,0,0,locationListener); //kullanıcının yerini al.
        }                                                      //0 -0  da bırakma.




        // Add a marker in Sydney and move the camera
        LatLng sydney = new LatLng(-34, 151); //Enlem ve Boylam LatLng
        mMap.addMarker(new MarkerOptions().position(sydney).title("Marker in Sydney")); //Haritaya marker ekle kodu
        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(sydney,10)); //Haritayı buraya yönlendir kodu. Zoomla



    }
//onRequestPermissionsResult kullanıcı izin verdiğinde ne olacak kodu.

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        if (grantResults.length > 0) {
            if (requestCode == 1 ) { //sadece req.code  1 olanın iznini istemiyor daha fazlasını istiyor olabilirdik.


                //İzin vermiş mi ?
                if (ContextCompat.checkSelfPermission(this,Manifest.permission.ACCESS_FINE_LOCATION)== PackageManager.PERMISSION_GRANTED) {

                    locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,0,0,locationListener); //izin verildiyse yapılacak olan.

                }
            }
        }



        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }
}
